# set Zsh as your default Tmux shell
set-option -g default-shell /usr/bin/zsh

# Tmux should be pretty, we need 256 color for that
set -g default-terminal "screen-256color"


# Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
set -g prefix C-a
unbind C-b

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
run '~/.tmux/plugins/tpm/tpm'

# buffer缓存复制到Linux系统粘贴板
bind C-c run " tmux save-buffer - | xclip -i -sel clipboard"
# Linux系统粘贴板内容复制到会话
bind C-v run " tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# tmux-yank
# set -g @shell_mode 'vi'
# set -g @yank_selection 'primary'

# command delay? We don't want that, make it short
# set -sg escape-time 1

# Set the numbering of windows to go from 1 instead
# of 0 - silly programmers :|
set-option -g base-index 1
setw -g pane-base-index 1

set-option -g set-clipboard on

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind | split-window -h
bind - split-window -v


set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
bind -T copy-mode-vi v send-keys -X begin-selection
# bind-key -t vi-copy 'y' copy-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel


# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' "copy-selection && run \"tmux save-buffer | xclip -selection clipboard\""

#  bind-key -t vi-copy 'y' "copy-selection && run \"tmux save-buffer | xsel --clipboard\""
#  bind -t vi-copy y copy-pipe 'xclip -selection clipboard'
#  bind-key -t vi-copy 'y' copy-selection

#up
bind-key -r k select-pane -U
#down
bind-key -r j select-pane -D
#left
bind-key -r h select-pane -L
#right
bind-key -r l select-pane -R

# 选择最后一个面板
bind -r e lastp
# 选择最后一个窗口
bind -r ^e last

# 与前一个面板交换位置
bind -r ^u swapp -U
# 与后一个面板交换位置
bind -r ^d swapp -D

# 向左扩展
bind -r L resize-pane -L 10
# 向右扩展
bind -r R resize-pane -R 10
# 向上扩展
bind -r K resize-pane -U 5
# 向下扩展
bind -r J resize-pane -D 5

set -g history-limit 65535

set-option -g -q mouse on


#设置面板间分割线的颜色
set -g pane-border-fg green
# #set -g pane-border-bg black
set -g pane-active-border-fg red
# #set -g pane-active-border-bg black

#开启window事件提示
setw -g monitor-activity on



# set-option -g status on
# set-option -g status-interval 2
# set-option -g status-justify "centre"
# set-option -g status-left-length 60
# set-option -g status-right-length 90
# set-option -g status-left "#(~/source/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/source/tmux-powerline/powerline.sh right)"

# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"


# 绑定m键为在新的panel打开man
bind m command-prompt "splitw -h 'exec man %%'"
# 绑定P键为开启日志功能，如下，面板的输出日志将存储到桌面
bind P pipe-pane -o "cat >>~/Desktop/#W.log" \; display "Toggled logging to ~/Desktop/#W.log"