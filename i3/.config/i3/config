# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard
#

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8


# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# shortcuts for Moc music player
# the previous song
bindsym XF86AudioPrev exec --no-startup-id mocp -r
# the next song
bindsym XF86AudioNext exec --no-startup-id mocp -f
# toggle between play and pause
bindsym XF86AudioPlay exec --no-startup-id mocp -G


# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn't scale on retina/hidpi displays.

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
# start file manager


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Automaatci back-and-forth when switching to the current workspace
workspace_auto_back_and_forth yes

bindsym $mod+Shift+Return exec urxvt -e ranger
#bindsym $mod+Control+t exec thunar

bindsym $mod+t exec emacsclient -nc -a ""

# start drofi dmenu
bindsym $mod+Tab exec --no-startup-id rofi -show window
bindsym $mod+d exec --no-startup-id "rofi -combi-modi window,drun,run,ssh -show combi -modi combi"
bindsym $mod+Shift+d exec --no-startup-id "rofi -show drun"


# bindsym --release Print exec scrot -u -e 'mv $f /data/Pictures/'
# bindsym --release Shift+Print exec scrot -s -e 'mv $f /data/Pictures/'

# 全屏截图
bindsym --release Print exec "scrot -b -m ~/Pictures/screenshot_$(date +'%y%m%d%H%M%s').png && xclip -selection clipoard -t 'image/png' ~/Pictures/screenshot_$(date +'%y%m%d%H%M%S').png"
# 截取当前窗口
bindsym --release $mod+Print exec "scrot -u -b -m ~/Pictures/screenshot_$(date +'%y%m%d%H%M%S').png && xclip -selection clipoard -t 'image/png' ~/Pictures/screenshot_$(date +'%y%m%d%H%M%S').png"
# 鼠标选择区域
bindsym --release $mod+Shift+Print exec "scrot -s -b -m ~/Pictures/screenshot_$(date +'%y%m%d%H%M%S').png && xclip -selection clipoard -t 'image/png' ~/Pictures/screenshot_$(date +'%y%m%d%H%M%S').Png"

Set $up k
set $down j
set $left h
set $right l

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Moving workspaces between screens
bindsym $mod+p move workspace to output right

# split in horizontal orientation
bindsym $mod+comma split h

# split in vertical orientation
bindsym $mod+period split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10


# Assign URxvt terminals to workspace 2
#assign [class="URxvt"] 2
# Same thing, but more precise (exact match instead of substring)
#assign [class="^URxvt$"] 2
# Same thing, but with a beautiful arrow :)
#assign [class="^URxvt$"] → 2
# Assignment to a named workspace
#assign [class="^URxvt$"] → work
# Assign to the workspace with number 2, regardless of name
#assign [class="^URxvt$"] → number 2
# You can also specify a number + name. If the workspace with number 2 exists,
# assign will skip the text part.
#assign [class="^URxvt$"] → number "2: work"
# Start urxvt -name irssi
#assign [class="^URxvt$" instance="^irssi$"] → 3
# Assign urxvt to the output right of the current one
#assign [class="^URxvt$"] → output right
# Assign urxvt to the primary output
#assign [class="^URxvt$"] → output primary

# workspace 1 output VGA1
# workspace 2 output VGA1
# workspace 3 output VGA1
# workspace 4 output VGA1
# workspace 5 output VGA1
# workspace 6 output HDMI1
# workspace 7 output HDMI1
# workspace 8 output HDMI1
# workspace 9 output HDMI1
# workspace 0 output HDMI1

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"




###########################################################################################################
#                                   Power Managment
# Use i3lock to lock screen. The background color of lock screen is #111111
#set $Locker i3lock -c "#111111" && sleep 1
set $Locker i3lock -t -i /data/Pictures/code_lock.png && sleep 1
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+c mode "$mode_system"
############################################################################################################




# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command $HOME/.config/i3/conky-i3bar
}


#######################################################################
# automatically start i3-config-wizard to offer the user to create a
# keysym-based config which used their favorite modifier (alt or windows)
#
# i3-config-wizard will not launch if there already is a config file
# in ~/.i3/config.
#
# Please remove the following exec line:
#######################################################################
exec i3-config-wizard

# start fcitx
exec fcitx

exec_always --no-startup-id ~/.local/share/JetBrains/Toolbox/bin/jetbrains-toolbox

exec_always --no-startup-id ~/.nutstore/dist/bin/nutstore-pydaemon.py
